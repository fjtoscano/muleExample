openapi: 3.0.0
info:
  title: API de Gestión de Usuarios
  description: API para gestionar usuarios y sus perfiles
  version: 1.0.0
servers:
  - url: https://api.ejemplo.com/v1
    description: Servidor principal

components:
  schemas:
    Usuario:
      type: object
      required:
        - nombre
        - email
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: "Juan Pérez"
        email:
          type: string
          format: email
          example: "juan.perez@example.com"
        direccion:
          type: object
          properties:
            calle:
              type: string
              example: "Av. Siempre Viva"
            ciudad:
              type: string
              example: "Springfield"
            pais:
              type: string
              example: "USA"
        telefono:
          type: string
          example: "+1-555-1234"
        rol:
          type: string
          enum:
            - admin
            - usuario
            - invitado
          example: "usuario"
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Solicitud incorrecta"
  
paths:
  /usuarios:
    get:
      summary: Obtener lista de usuarios
      description: Retorna una lista con todos los usuarios.
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      summary: Crear un nuevo usuario
      description: Agrega un nuevo usuario al sistema.
      requestBody:
        description: Datos del nuevo usuario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Usuario creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Error en la solicitud
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /usuarios/{id}:
    get:
      summary: Obtener detalles de un usuario
      description: Retorna los detalles de un usuario específico por su ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      responses:
        '200':
          description: Detalles del usuario obtenidos correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Actualizar un usuario
      description: Actualiza los detalles de un usuario existente.
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            type: integer
      requestBody:
        description: Datos actualizados del usuario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuario actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Eliminar un usuario
      description: Elimina un usuario existente por su ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado exitosamente, sin contenido en la respuesta.
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
